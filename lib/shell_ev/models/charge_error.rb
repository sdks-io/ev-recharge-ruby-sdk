# shell_ev
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module ShellEv
  # ChargeError Model.
  class ChargeError < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # Session code e.g InternalError
    # @return [String]
    attr_accessor :code

    # Session message
    # @return [String]
    attr_accessor :message

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['code'] = 'code'
      @_hash['message'] = 'message'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        code
        message
      ]
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(code = SKIP, message = SKIP)
      @code = code unless code == SKIP
      @message = message unless message == SKIP
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      code = hash.key?('code') ? hash['code'] : SKIP
      message = hash.key?('message') ? hash['message'] : SKIP

      # Create object from extracted values.
      ChargeError.new(code,
                      message)
    end

    # Provides a human-readable string representation of the object.
    def to_s
      class_name = self.class.name.split('::').last
      "<#{class_name} code: #{@code}, message: #{@message}>"
    end

    # Provides a debugging-friendly string with detailed object information.
    def inspect
      class_name = self.class.name.split('::').last
      "<#{class_name} code: #{@code.inspect}, message: #{@message.inspect}>"
    end
  end
end
