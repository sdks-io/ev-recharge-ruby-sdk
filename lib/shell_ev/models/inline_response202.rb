# shell_ev
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module ShellEv
  # InlineResponse202 Model.
  class InlineResponse202 < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # Mandatory UUID (according to RFC 4122 standards) for requests and
    # responses. This will be played back in the response from the request.
    # @return [UUID | String]
    attr_accessor :request_id

    # Indicates overall status of the request
    # @return [InlineResponse202StatusEnum]
    attr_accessor :status

    # Indicates overall status of the request
    # @return [Array[InlineResponse202Data]]
    attr_accessor :data

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['request_id'] = 'requestId'
      @_hash['status'] = 'status'
      @_hash['data'] = 'data'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      []
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(request_id = nil, status = nil, data = nil)
      @request_id = request_id
      @status = status
      @data = data
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      request_id = hash.key?('requestId') ? hash['requestId'] : nil
      status = hash.key?('status') ? hash['status'] : nil
      # Parameter is an array, so we need to iterate through it
      data = nil
      unless hash['data'].nil?
        data = []
        hash['data'].each do |structure|
          data << (InlineResponse202Data.from_hash(structure) if structure)
        end
      end

      data = nil unless hash.key?('data')

      # Create object from extracted values.
      InlineResponse202.new(request_id,
                            status,
                            data)
    end
  end
end
